{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-18\",\n  headers: {\n    authorization: \"6cabfaf3-10af-4682-ae25-3826c489e24b\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nconst handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n};\n\n//получение данных пользователя\nexport const getUser = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n//получение данных карточек\nexport const getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//отправка данных профиля на сервер\nexport const sendUser = (nameUser, aboutUser) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: nameUser,\n      about: aboutUser,\n    }),\n  }).then(handleResponse);\n};\n//Добавление новой карточки на сервер\nexport const sendCard = (cardName, linkUrl) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: cardName,\n      link: linkUrl,\n    }),\n  }).then(handleResponse);\n};\n//Удаление карточки\nexport const deleteCardFromServer = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n\n//Постановка лайка на карточку\nexport const addLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n//Удаление лайка с карточки\nexport const deleteLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(handleResponse);\n};\n//Обновление изображения профайла\nexport const updateAvatar = (avatarUrl) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl,\n    }),\n  }).then(handleResponse);\n};\n","import { deleteLike, addLike } from \"./api\";\n\n// @todo: Темплейт карточки\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n// @todo: Функция создания карточки\nexport function createNewCard(\n  item,\n  deleteCard,\n  openImageModal,\n  addLikeButton,\n  userData,\n  deleteCardFromServer\n) {\n  const cardListItem = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const deleteButton = cardListItem.querySelector(\".card__delete-button\");\n  const cardImage = cardListItem.querySelector(\".card__image\");\n  const likeButton = cardListItem.querySelector(\".card__like-button\");\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n\n  cardListItem.querySelector(\".card__title\").textContent = item.name;\n  //Счетчик лайков карточки\n  const likesCounter = cardListItem.querySelector(\".card_like-counter\");\n  likesCounter.textContent = item.likes.length;\n  //Скрытие кнопки удаления если карточка не ваша\n  if (userData[\"_id\"] !== item.owner[\"_id\"]) {\n    deleteButton.classList.add(\"card_delete-button-display-none\");\n  }\n  //Закрашивание лайка там, где поставил его\n  if (item.likes.some((like) => like[\"_id\"] === userData[\"_id\"])) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  cardImage.addEventListener(\"click\", function () {\n    openImageModal(item);\n  });\n  //слушатель постановки лайка\n  likeButton.addEventListener(\"click\", function (evt) {\n    addLikeButton(evt, item, likesCounter);\n  });\n\n  deleteButton.addEventListener(\"click\", function (evt) {\n    deleteCard(evt);\n    deleteCardFromServer(item[\"_id\"]);\n  });\n\n  return cardListItem;\n}\n\n// @todo: Функция удаления карточки с изображением\nexport function deleteCard(evt) {\n  evt.target.closest(\".places__item\").remove();\n}\n\n//Функция лайка карточки\nexport function addLikeButton(evt, item, likesCounter) {\n  if (evt.target.classList.contains(\"card__like-button_is-active\")) {\n    deleteLike(item._id).then((res) => {\n      evt.target.classList.remove(\"card__like-button_is-active\");\n      likesCounter.textContent = res.likes.length;\n    });\n  } else {\n    addLike(item._id).then((res) => {\n      evt.target.classList.add(\"card__like-button_is-active\");\n      likesCounter.textContent = res.likes.length;\n    });\n  }\n}\n","// ОТКРЫТИЕ И ЗАКРЫТИЕ МОДАЛЬНЫХ ОКОН ПО КЛИКУ\n// функция открытия попапа\nexport function openPopup(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", removePopupEsc);\n}\n// функция закрытия попапа\nexport function closePopup(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", removePopupEsc);\n}\n\n//Массив всех попапов\nexport const allPopups = document.querySelectorAll(\".popup\");\n\n//Закрытия попапа кликом на оверлей\nexport function closePopupOverlay(evt) {\n  if (evt.currentTarget === evt.target) {\n    closePopup(evt.target);\n  }\n}\n\n// Закрытие попапов клавишей ESC\nfunction removePopupEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector(\".popup_is-opened\"));\n  }\n}\n","//КОД ВАЛИДАЦИИ\n\n//Объект с классами форм валидации\nexport const validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"form__submit_inactive\",\n  inputErrorClass: \"form__input_type_error\",\n  errorClass: \"form__input-error_active\",\n};\n\n// 1 --- Установка слушателей на формы\nexport function enableValidation(validationConfig) {\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.formSelector)\n  );\n  formList.forEach(function (form) {\n    setEventListeners(form, validationConfig);\n  });\n}\n\n// 2 --- Функция установки слушателей validationConfig.formSelector\nfunction setEventListeners(formElement, validationConfig) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n  \n  toggleButtonState(inputList, buttonElement, validationConfig);\n  \n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener(\"input\", function () {\n      \n      toggleButtonState(inputList, buttonElement, validationConfig);\n      isValid(formElement, inputElement);\n    });\n  });\n}\n\n// 3 --- Функция проверки на валидность\nfunction isValid(formElement, inputElement) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      validationConfig\n    );\n  } else {\n    hideInputEror(formElement, inputElement, validationConfig);\n  }\n}\n\n//функция переключения состояния кнопки при валидации\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n}\n\n//функция-Проверка валидности всех инпутов формы\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n}\n\n//Функция показа ошибки ввода\nfunction showInputError(\n  formElement,\n  inputElement,\n  errorMessage,\n  validationConfig\n) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.add(validationConfig.inputErrorClass);\n\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n}\n\n//Функция скрытия ошибки ввода\nfunction hideInputEror(formElement, inputElement, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = \"\";\n}\n\n//Функция очистки полей валидации\nexport function clearValidation(profileForm, validationConfig) {\n  const inputList = profileForm.querySelectorAll(\n    validationConfig.inputSelector\n  );\n  const profileButoon = profileForm.querySelector(\n    validationConfig.submitButtonSelector\n  );\n  profileButoon.disabled = true;\n  profileButoon.classList.add(validationConfig.inactiveButtonClass);\n  inputList.forEach(function (input) {\n    hideInputEror(profileForm, input, validationConfig);\n  });\n}\n","import \"../pages/index.css\";\nimport { createNewCard, deleteCard, addLikeButton } from \"./components/card.js\";\nimport {\n  openPopup,\n  closePopup,\n  closePopupOverlay,\n  allPopups,\n} from \"./components/modal.js\";\nimport {\n  enableValidation,\n  validationConfig,\n  clearValidation,\n} from \"./components/validation.js\";\nimport {\n  getUser,\n  getCards,\n  sendUser,\n  sendCard,\n  deleteCardFromServer,\n  updateAvatar,\n} from \"./components/api.js\";\n\n// @todo: DOM узлы\nconst cardList = document.querySelector(\".places__list\");\n\n// Анимация всех попапов (навешивание класса .popup_is-animated на все попапы при открытии страницы)\nallPopups.forEach(function (item) {\n  item.classList.add(\"popup_is-animated\");\n});\n\n// ПОПАП ОКНО ПРОФАЙЛА\nconst profileButoon = document.querySelector(\".profile__edit-button\");\nconst profilePopup = document.querySelector(\".popup_type_edit\");\n\n//функция открытия попапа на профайле\nprofileButoon.addEventListener(\"click\", function () {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(profilePopup);\n  //функция сброса ошибок валидации при открытии формы\n  clearValidation(profileForm, validationConfig);\n});\n\n// ИЗМЕНЕНИЕ СТРАНИЦЫ ЧЕРЕЗ ПОПАП (ФОРМА РЕДАКТИРОВАНИЯ ДАННЫХ О ПОЛЬЗОВАТЕЛЕ)\nconst profileForm = document.forms[\"edit-profile\"];\nconst nameInput = profileForm.elements.name;\nconst jobInput = profileForm.elements.description;\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\n\nfunction submitProfileForm(evt) {\n  evt.preventDefault();\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n\n  formButton.textContent = \"Сохранение...\";\n  //Передача данных пользователя на сервер\n  sendUser(profileTitle.textContent, profileDescription.textContent)\n    .then(() => {\n      closePopup(profilePopup);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n}\nprofileForm.addEventListener(\"submit\", submitProfileForm);\n//КОНЕЦ КОДА ПОПАПА ОКНА ПРОФАЙЛА\n\n//ПОПАП ДОБАВЛЕНИЯ ИЗОБРАЖЕНИЯ НА БОЛЬШОЙ ПЛЮС\nconst addButton = document.querySelector(\".profile__add-button\");\nconst addModal = document.querySelector(\".popup_type_new-card\");\n//Открытие попапа добавления изображения\naddButton.addEventListener(\"click\", function () {\n  openPopup(addModal);\n});\n// Добавление изображения на страницу с помошью попапа\nconst newPlaceCardForm = document.forms[\"new-place\"];\nconst placeNameInput = newPlaceCardForm.elements[\"place-name\"];\nconst placeUrlInput = newPlaceCardForm.elements.link;\nfunction createNewCardItem(evt) {\n  evt.preventDefault();\n  const cardObj = {};\n  cardObj.name = placeNameInput.value;\n  cardObj.link = placeUrlInput.value;\n\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n\n  formButton.textContent = \"Сохранение...\";\n  sendCard(cardObj.name, cardObj.link)\n    .then((result) => {\n      cardList.prepend(\n        createNewCard(\n          result,\n          deleteCard,\n          openImageModal,\n          addLikeButton,\n          result.owner,\n          deleteCardFromServer\n        )\n      );\n      closePopup(addModal);\n      newPlaceCardForm.reset();\n      clearValidation(addModal, validationConfig);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n}\n\nnewPlaceCardForm.addEventListener(\"submit\", createNewCardItem);\n\n//КОНЕЦ КОДА ПОПАПА ДОБАВЛЕНИЯ ИЗОБРАЖЕНИЯ НА БОЛЬШОЙ ПЛЮС\n\n// Dom елементы модального окна карточки изображения\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst popupImage = imagePopup.querySelector(\".popup__image\");\nconst popupImageSubtitle = imagePopup.querySelector(\".popup__caption\");\n\n// функция открытия модального окна карточки изображения\nfunction openImageModal(item) {\n  popupImage.src = item.link;\n  popupImage.alt = item.name;\n  popupImageSubtitle.textContent = item.name;\n\n  openPopup(imagePopup);\n}\n\n//ЗАКРЫТИЕ ПОПАПОВ КЛИКОМ НА ОВЕРЛЕЙ И НА КРЕСТИК\nallPopups.forEach(function (item) {\n  const popupCrost = item.querySelector(\".popup__close\");\n  popupCrost.addEventListener(\"click\", function () {\n    closePopup(item);\n  });\n  item.addEventListener(\"click\", closePopupOverlay);\n});\n//КОД ПОПАПА РЕДАКТИРОВАНИЯ АВАТАРА ПРОФИЛЯ\n//Открытие попапа окна изменения изображения профиля\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\nconst profileAvatar = document.querySelector(\".profile__image\");\nconst avatarForm = document.forms[\"avatar-form\"];\nconst avatarInputUrl = avatarForm.elements.link;\nconst avatarSubmitButton = avatarForm.querySelector(\".popup__button\");\nprofileAvatar.addEventListener(\"click\", function () {\n  openPopup(popupAvatar);\n  clearValidation(avatarForm, validationConfig);\n});\n\navatarForm.addEventListener(\"submit\", function (evt) {\n  evt.preventDefault();\n  const formButton = evt.submitter;\n  const defaultTextButton = formButton.textContent;\n  formButton.textContent = \"Сохранение...\";\n  updateAvatar(avatarInputUrl.value)\n    .then((result) => {\n      profileAvatar.style.backgroundImage = `url(${result.avatar})`;\n      closePopup(popupAvatar);\n      evt.target.reset();\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      formButton.textContent = defaultTextButton;\n    });\n});\n//КОНЕЦ КОДА ПОПАПА РЕДАКТИРОВАНИЯ АВАТАРА ПРОФИЛЯ\n\n// Запуск валидации форм\nenableValidation(validationConfig);\n\n// Получение и вывод данных с сервера\nPromise.all([getCards(), getUser()])\n  .then(([cards, userData]) => {\n    //профиль\n    const profileImage = document.querySelector(\".profile__image\");\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n    //вывод карточек\n    cards.forEach(function (item) {\n      cardList.append(\n        createNewCard(\n          item,\n          deleteCard,\n          openImageModal,\n          addLikeButton,\n          userData,\n          deleteCardFromServer\n        )\n      );\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","deleteCardFromServer","cardId","fetch","method","then","cardTemplate","document","querySelector","content","createNewCard","item","deleteCard","openImageModal","addLikeButton","userData","cardListItem","cloneNode","deleteButton","cardImage","likeButton","src","link","alt","name","textContent","likesCounter","likes","length","owner","classList","add","some","like","addEventListener","evt","target","closest","remove","contains","_id","addLike","openPopup","popup","removePopupEsc","closePopup","removeEventListener","allPopups","querySelectorAll","closePopupOverlay","currentTarget","key","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","isValid","formElement","inputElement","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","hideInputEror","errorElement","id","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","clearValidation","profileForm","profileButoon","forEach","input","cardList","profilePopup","nameInput","value","profileTitle","jobInput","profileDescription","forms","elements","description","preventDefault","nameUser","aboutUser","formButton","submitter","defaultTextButton","body","JSON","stringify","about","catch","err","console","log","finally","addButton","addModal","newPlaceCardForm","placeNameInput","placeUrlInput","cardObj","cardName","linkUrl","result","prepend","reset","imagePopup","popupImage","popupImageSubtitle","popupAvatar","profileAvatar","avatarForm","avatarInputUrl","avatarUrl","avatar","style","backgroundImage","Array","from","form","setEventListeners","enableValidation","all","_ref","_ref2","cards","profileImage","append"],"sourceRoot":""}